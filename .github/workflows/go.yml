# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build_client:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Set up Go for Client
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'
        
    - name: Get Client Dependencies
      run: go get -v ./client/...
      
    - name: Build Client
      run: go build -o client_start_linux -v ./client/cmd/start_client.go

    - name: Build Client for Windows
      run: GOOS=windows GOARCH=amd64 go build -o client_start_win_amd64.exe -v ./client/cmd/start_client.go

    - name: Archive Client Artifact
      uses: actions/upload-artifact@v2
      with:
        name: client-artifact
        path: client_start

  build_server:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Set up Go for Server
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'
        
    - name: Get Server Dependencies
      run: go get -v ./server/...
      
    - name: Build Server
      run: go build -o server_start -v ./server/cmd/start_server.go

    - name: Build Server for Windows
      run: GOOS=windows GOARCH=amd64 go build -o server_start_win_amd64.exe -v ./server/cmd/start_server.go

    - name: Archive Server Artifact
      uses: actions/upload-artifact@v2
      with:
        name: server-artifact
        path: server_start
